modules:
  # Frontend React App
  - id: frontend
    module: polytope/node
    args:
      id: frontend
      image: node:22-bullseye-slim
      code: { type: host, path: ./src/frontend }
      cmd: ./bin/run
      env:
        - { name: PORT, value: pt.value frontend_port }
        - { name: REACT_APP_API_URL, value: "http://{pt.value api_host}:{pt.value api_port}" }
      restart:
        policy: always
      services:
        - id: frontend
          ports: [{protocol: http, port: pt.value frontend_port}]
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /root/.npm/, source: { type: volume, scope: project, id: npm-cache }}
        - { path: /app/node_modules/, source: { type: volume, scope: project, id: npm-modules }}

  # FastAPI Backend
  - id: api
    module: polytope/python
    args:
      id: api
      image: python:3.12.2-slim-bookworm
      code: { type: host, path: ./src/api }
      cmd: ./bin/run
      env:
        - { name: PORT, value: pt.value api_port }
        - { name: REDPANDA_HOST, value: pt.value redpanda_host }
        - { name: REDPANDA_PORT, value: pt.value redpanda_port }
        - { name: REDPANDA_TOPIC, value: pt.value redpanda_messages_topic }
      restart:
        policy: always
      services:
        - id: api
          ports: [{protocol: http, port: pt.value api_port}]
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}

  # Redpanda Server
  - id: redpanda
    module: polytope/redpanda
    args:
      data-volume: { id: redpanda-data, type: volume, scope: project }

  # RPK CLI for topic management
  - id: rpk
    module: polytope/container
    params: [{id: cmd, type: str}]
    args:
      image: docker.redpanda.com/redpandadata/redpanda:v23.3.11
      env: [{ name: RPK_BROKERS, value: "{pt.value redpanda_host}:{pt.value redpanda_port}" }]
      cmd: pt.param cmd
      restart:
        policy: on-failure

  # Create Redpanda topics
  - id: redpanda-create-topics
    module: rpk
    args: 
      cmd: "topic create {pt.value redpanda_messages_topic} || true"

  # Redpanda Console
  - id: redpanda-console
    module: polytope/container
    args:
      image: docker.redpanda.com/redpandadata/console:v2.4.6
      env:
        - { name: KAFKA_BROKERS, value: "{pt.value redpanda_host}:{pt.value redpanda_port}" }
        - { name: KAFKA_SCHEMAREGISTRY_ENABLED, value: "false" }
        - { name: KAFKA_PROTOBUF_ENABLED, value: "false" }
      services:
        - id: redpanda-console
          ports: [{protocol: http, port: pt.value redpanda_console_port}]
      restart:
        policy: always

templates:
  - id: stack
    info: Full stack with React frontend, FastAPI backend, Redpanda server and console
    run:
      - module: redpanda
      - module: redpanda-create-topics
      - module: api
      - module: frontend
      - module: redpanda-console
