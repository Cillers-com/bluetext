modules:
  - id: frontend
    module: polytope/node
    args:
      id: frontend
      image: node:22-bullseye-slim
      code: { type: host, path: ./src/frontend }
      cmd: ./bin/run
      env:
        - { name: PORT, value: "#pt-value frontend_port" }
        - { name: REACT_APP_API_URL, value: "#pt-value api_url" }
      restart:
        policy: always
      services:
        - id: frontend
          ports: [{protocol: http, port: "#pt-value frontend_port"}]
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /root/.npm/, source: { type: volume, scope: project, id: npm-cache }}
        - { path: /app/node_modules/, source: { type: volume, scope: project, id: npm-modules }}

  - id: api
    module: polytope/python
    args:
      id: api
      image: python:3.12-slim
      code: { type: host, path: ./src/api }
      cmd: ./bin/run
      env:
        - { name: PORT, value: "#pt-value api_port" }
        - { name: REDPANDA_BOOTSTRAP_SERVERS, value: "#pt-value redpanda_bootstrap_servers" }
      restart:
        policy: always
      services:
        - id: api
          ports: [{protocol: http, port: "#pt-value api_port"}]
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}

  - id: redpanda
    info: Runs the Redpanda server in dev mode
    module: polytope/redpanda
    args:
      image: docker.redpanda.com/redpandadata/redpanda:v23.3.11
      root-log-level: warn 
      data-volume: { id: redpanda-data, type: volume, scope: project }

  - id: redpanda-init
    module: polytope/python
    args:
      image: python:3.12-slim
      code: { type: host, path: ./src/redpanda-init }
      cmd: ./bin/run
      restart: { policy: on-failure }
      env:
        - { name: REDPANDA_BOOTSTRAP_SERVERS, value: "#pt-value redpanda_bootstrap_servers" }
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /app/conf/, source: { type: host, path: ./conf/redpanda }}

  - id: redpanda-console
    info: Runs the Redpanda Console service
    module: redpanda-console-base
    args: 
      image: docker.redpanda.com/redpandadata/console:v2.4.5
      container-id: redpanda-console
      brokers: [{host: redpanda, port: 9092}]
      log-level: info
      port: 8079
      restart: { policy: always }

  - id: redpanda-console-base
    info: Runs the Redpanda console.
    params:
    - id: image
      info: The image to use.
      name: Image
      type: [default, str, 'docker.redpanda.com/redpandadata/console:v2.4.5']
    - id: container-id
      info: The ID to give the spawned container.
      name: Container ID
      type: [default, str, redpanda-console]
    - id: brokers
      info: List of host-port pairs to use to connect to the Kafka/Redpanda cluster.
      name: Brokers
      type:
      - default
      - - {host: str, port: int}
      - - {host: redpanda, port: 9092}
    - id: schema-registry-url
      info: Schema Registry to connect to.
      name: Schema Registry URL
      type: [maybe, str]
    - id: admin-url
      info: Redpanda admin URL to connect to.
      name: Redpanda admin URL
      type: [maybe, str]
    - id: log-level
      info: The log level.
      name: Log level
      type:
      - default
      - [enum, debug, info, warn, error, fatal]
      - info
    - id: port
      info: The console HTTP port.
      name: HTTP Port
      type: [default, int, 8079]
    - id: restart
      info: Restart policy for the container.
      name: Restart policy
      type:
      - default
      - policy: [enum, always, on-failure]
        max-restarts: [maybe, int]
      - {policy: always, max-restarts: null}
    module: polytope/container
    args:
      image: '#pt-clj (:image params)'
      id: '#pt-clj (:container-id params)'
      env:
      - {name: CONFIG_FILEPATH, value: /etc/redpanda-console-config.yaml}
      mounts:
      - path: /etc/redpanda-console-config.yaml
        source:
          type: host
          path: ./conf/redpanda/console.yaml 
      restart: '#pt-clj (:restart params)'
      services:
      - id: redpanda-console
        ports:
        - {port: '#pt-clj (:port params)', protocol: http}

templates:
  - id: stack
    run:
      - module: redpanda
      - module: redpanda-init
      - module: redpanda-console
      - module: api
      - module: frontend
