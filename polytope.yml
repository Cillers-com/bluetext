modules:
  - id: couchbase
    module: polytope/couchbase
    args:
      image: "couchbase:enterprise-7.6.6"
      id: couchbase
      restart:
        policy: always
      services:
        - id: couchbase
          ports:
            - port: "#pt-value couchbase_port"
              protocol: http
              label: http
            - port: "#pt-value couchbase_ssl_port"
              protocol: http
              label: http-ssl

  - id: couchbase-init
    module: polytope/python
    args:
      image: "python:3.12.2-slim-bookworm"
      id: init-couchbase
      code: { type: host, path: ./src/couchbase-init }
      cmd: ./bin/run
      restart: 
        policy: on-failure
        max-restarts: 10
      env:
        - { name: COUCHBASE_HOST, value: "#pt-value couchbase_host" }
        - { name: COUCHBASE_USERNAME, value: "#pt-secret couchbase_username" }
        - { name: COUCHBASE_PASSWORD, value: "#pt-secret couchbase_password" }
        - { name: COUCHBASE_MAIN_BUCKET_NAME, value: "#pt-value couchbase_bucket_name" }
        - { name: COUCHBASE_TLS, value: "#pt-value couchbase_tls" }
        - { name: COUCHBASE_TYPE, value: "#pt-value couchbase_type" }
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /app/conf/, source: { type: host, path: ./conf/couchbase }}

  - id: api
    module: polytope/python
    args:
      image: "python:3.12.2-slim-bookworm"
      id: api
      code: { type: host, path: ./src/api }
      cmd: ./bin/run
      env:
        - { name: API_PORT, value: "#pt-value api_port" }
        - { name: API_HOST, value: "#pt-value api_host" }
        - { name: COUCHBASE_HOST, value: "#pt-value couchbase_host" }
        - { name: COUCHBASE_USERNAME, value: "#pt-secret couchbase_username" }
        - { name: COUCHBASE_PASSWORD, value: "#pt-secret couchbase_password" }
        - { name: COUCHBASE_BUCKET_NAME, value: "#pt-value couchbase_bucket_name" }
        - { name: COUCHBASE_TLS, value: "#pt-value couchbase_tls" }
      restart:
        policy: always
      services:
        - id: api
          ports:
            - protocol: http
              port: "#pt-value api_port"
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}

  - id: frontend
    module: polytope/node
    args:
      image: "node:22-bullseye-slim"
      id: frontend
      code: { type: host, path: ./src/frontend }
      cmd: ./bin/run
      env:
        - { name: PORT, value: "#pt-value frontend_port" }
        - { name: REACT_APP_API_PROTOCOL, value: "#pt-value api_protocol" }
        - { name: REACT_APP_API_HOST, value: "#pt-value api_host" }
        - { name: REACT_APP_API_PORT, value: "#pt-value api_port" }
      restart:
        policy: always
      services:
        - id: frontend
          ports:
            - protocol: http
              port: "#pt-value frontend_port"
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /root/.npm/, source: { type: volume, scope: project, id: npm-cache }}
        - { path: /app/node_modules/, source: { type: volume, scope: project, id: npm-modules }}

templates:
  - id: stack
    info: "Full stack application with React frontend, FastAPI backend, and Couchbase database"
    run:
      - module: couchbase
      - module: couchbase-init
      - module: api
      - module: frontend
