$schema: https://json-schema.org/draft/2020-12/schema
$id: https://example.com/schemas/polytope-data-types
title: Polytope Data Types
description: Comprehensive schema for all Polytope data types based on the provided documentation.
type: object
additionalProperties: true
definitions:
  Code:
    title: Code
    type: string
    description: Representation of code, prefixed with language identifier or raw Clojure form.
    oneOf:
      - pattern: "^#(pt-js|pt-py|pt-clj)\\s.*$"
      - type: string
  CronExpr:
    title: CronExpr
    type: string
    description: Cron schedule expression, e.g., '15 3 * * *'.
  DatasetRef:
    title: DatasetRef
    type: string
    description: Reference to a dataset, e.g., 'my-dataset' or 'my-org/my-project>dataset:my-dataset'.
    pattern: "^[a-z0-9_-]+(>[a-z0-9_-]+>dataset:[a-z0-9_-]+)?$"
  EnvVarSpec:
    title: EnvVarSpec
    type: object
    properties:
      name:
        type: string
      value:
        oneOf:
          - type: string
          - type: string
          - type: boolean
          - type: integer
    required:
      - name
    additionalProperties: false
  Id:
    title: Id
    type: string
    pattern: "^[a-z0-9_-]+$"
  ModuleRef:
    title: ModuleRef
    type: string
    pattern: "^[a-z0-9_-]+/[a-z0-9_-]+(@[a-zA-Z0-9_-]+)?(:[a-z0-9_-/]+)?(![a-z0-9_-]+)?$"
  ModuleSpec:
    title: ModuleSpec
    type: object
    properties:
      api-version:
        type: string
      args:
        type: object
        additionalProperties: true
        patternProperties:
          "^[a-z0-9_-]+$": {}
      code:
        $ref: "#/definitions/Code"
      default?:
        type: boolean
      id:
        $ref: "#/definitions/Id"
      info:
        type: string
      module:
        $ref: "#/definitions/ModuleRef"
      params:
        type: array
        items:
          type: object
          properties:
            id:
              $ref: "#/definitions/Id"
            info:
              type: string
            name:
              type: string
            type:
              description: Parameter data type format.
          required:
            - id
            - type
          additionalProperties: false
    oneOf:
      - required: [code]
      - required: [module]
    required:
      - id
    additionalProperties: false
  MountSourceSpec:
    title: MountSourceSpec
    oneOf:
      - type: object
        properties:
          dataset:
            oneOf:
              - $ref: "#/definitions/DatasetRef"
              - $ref: "#/definitions/Uid"
          path:
            type: string
          type:
            type: string
            const: "dataset"
          version:
            type: integer
        required:
          - dataset
          - type
        additionalProperties: false
      - type: object
        properties:
          path:
            type: string
          type:
            type: string
            const: "host"
        required:
          - path
          - type
        additionalProperties: false
      - type: object
        properties:
          path:
            type: string
          repo:
            oneOf:
              - $ref: "#/definitions/RepoRef"
              - $ref: "#/definitions/Uid"
          revision:
            type: string
          type:
            type: string
            const: "repo"
        required:
          - type
        additionalProperties: false
      - type: object
        properties:
          data:
            type: string
          type:
            type: string
            const: "string"
        required:
          - data
          - type
        additionalProperties: false
      - type: object
        properties:
          create:
            type: string
            enum: ["never", "when-missing", "always"]
          id:
            $ref: "#/definitions/Id"
          scope:
            type: string
            enum: ["project", "job"]
          source:
            $ref: "#/definitions/MountSourceSpec"
          type:
            type: string
            const: "volume"
        required:
          - type
        additionalProperties: false
  PolytopeFile:
    title: PolytopeFile
    type: object
    properties:
      modules:
        type: array
        items:
          $ref: "#/definitions/ModuleSpec"
      templates:
        type: array
        items:
          $ref: "#/definitions/TemplateSpec"
    additionalProperties: false
  RepoRef:
    title: RepoRef
    type: string
    pattern: "^[a-z0-9_-]+/[a-z0-9_-]+(/[a-z0-9_-]+)?$"
  ServicePortsSpec:
    title: ServicePortsSpec
    oneOf:
      - type: object  # Single port
        properties:
          expose-as:
            type: integer
          internal:
            type: boolean
          label:
            $ref: "#/definitions/Id"
          port:
            type: integer
          protocol:
            type: string
            enum: ["tcp", "udp", "http", "https"]
        required:
          - port
          - protocol
        additionalProperties: false
      - type: object  # Port range
        properties:
          expose-as:
            type: string
          internal:
            type: boolean
          label:
            $ref: "#/definitions/Id"
          protocol:
            type: string
            enum: ["tcp", "udp", "http", "https"]
          range:
            type: string
        required:
          - protocol
          - range
        additionalProperties: false
  TemplateSpec:
    title: TemplateSpec
    type: object
    properties:
      id:
        $ref: "#/definitions/Id"
      info:
        type: string
      run:
        type: array
        items:
          oneOf:
            - type: object
              properties:
                args:
                  type: object
                  additionalProperties: true
                  patternProperties:
                    "^[a-z0-9_-]+$": {}
                id:
                  $ref: "#/definitions/Id"
                module:
                  $ref: "#/definitions/ModuleRef"
                run-when:
                  type: object
                  properties:
                    after:
                      type: string
                    after-condition:
                      type: string
                      enum: ["success", "always", "failed"]
                  additionalProperties: false
              required:
                - module
              additionalProperties: false
            - $ref: "#/definitions/ModuleRef"
    required:
      - id
      - run
    additionalProperties: false
  Uid:
    title: Uid
    type: string
    pattern: "^[0-9a-f]{16}$"
