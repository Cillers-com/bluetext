templates:

modules:
  - id: boilerplate
    module: polytope/container
    params:
      - id: target-path
        info: Path relative to the repo root where the module's code will be created
        type: str
      - id: source-path
        info: Git repository URL to clone boilerplate code from
        type: str
    args:
      image: ubuntu
      cmd:
        - sh
        - -c
        - |
          set -eu
          echo "Installing git..."
          apt-get update && apt-get install -y git
          
          echo "Creating boilerplate code from $SOURCE_PATH at $TARGET_PATH..."
          
          # Check target path
          if [ -d "$TARGET_PATH" ]; then
            if [ "$(ls -A "$TARGET_PATH")" ]; then
              echo "ERROR: The target path '$TARGET_PATH' already exists and is not empty. Please choose a different path."
              exit 1
            fi
          else
            mkdir -p "$TARGET_PATH"
          fi
          
          # Clone repository to temporary location
          echo "Cloning boilerplate from $SOURCE_PATH..."
          TEMP_DIR="/tmp/boilerplate-$$"
          git clone --depth 1 "$SOURCE_PATH" "$TEMP_DIR"
          
          # Copy contents (excluding .git directory)
          echo "Copying boilerplate files to $TARGET_PATH..."
          cp -r "$TEMP_DIR"/* "$TARGET_PATH/" 2>/dev/null || true
          cp -r "$TEMP_DIR"/.[!.]* "$TARGET_PATH/" 2>/dev/null || true
          
          # Clean up
          rm -rf "$TEMP_DIR"
          
          echo "Done! Boilerplate code created at $TARGET_PATH"
      workdir: /repo
      mounts:
        - path: /repo
          source:
            type: host
            path: ''
      env:
        - name: TARGET_PATH
          value: pt.param target-path
        - name: SOURCE_PATH
          value: pt.param source-path

  - id: add-package-python
    info: Adds uv packages in a Python module
    module: polytope/container
    params:
      - id: packages
        info: Comma-separated list of packages to add
        type: str
      - id: module-code-path
        info: Relative path of the module code's root directory
        type: str
    args:
      image: python:3.13-slim
      cmd:
        - sh
        - -c
        - |
          set -eu
          echo "Installing uv..."
          pip install uv
          echo "Adding python packages: $PACKAGES"
          cd "/module-code"
          if [ ! -f "pyproject.toml" ]; then
            echo "ERROR: No pyproject.toml found"
            exit 1
          fi
          # Add packages to pyproject.toml
          uv add $PACKAGES
          echo "Done!"
      mounts:
        - path: /module-code
          source:
            type: host
            path: pt.param module-code-path
      env:
        - name: PACKAGES
          value: pt.param packages

  - id: add-package-npm
    info: Adds npm packages in an npm compatible module, such as Node.js, Deno or Bun. 
    module: polytope/container
    params:
      - id: packages
        info: Space-separated list of packages to add
        type: str
      - id: module-code-path
        info: Relative path of the module's code root directory
        type: str
    args:
      image: node:18-slim
      cmd:
        - sh
        - -c
        - |
          set -eu
          echo "Adding npm packages: $PACKAGES"
          cd "/module-code"
          if [ ! -f "package.json" ]; then
            echo "ERROR: No package.json found"
            exit 1
          fi
          # Add packages using yarn with --no-install flag
          yarn add $PACKAGES --no-install 
          echo "Done!"
      mounts:
        - path: /module-code
          source:
            type: host
            path: pt.param module-code-path
      env:
        - name: PACKAGES
          value: pt.param packages
